{"version":3,"file":"authorization.js","sourceRoot":"","sources":["../../sdk/authorization.ts"],"names":[],"mappings":"AAIA,OAAO,EAAE,8BAA8B,EAAE,MAAM,OAAO,CAAC;AAEvD,MAAM,CAAC,MAAM,iCAAiC,GAAG,CAC/C,SAA+C,EAC/C,MAAiB,EACjB,YAA6B,EAC7B,EAAE;;IACF,IACE,SAAS,CAAC,MAAM,CAAC,qBAAqB;QACtC,CAAC,CAAA,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,IAAI,CAAC,QAAQ,0CAAE,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CACvC,SAAS,CAAC,MAAM,CAAC,eAAe;aAC7B,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;aACxB,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAClC,CAAA;QACD,CAAC,CACC,CAAA,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,UAAU,0CAAE,GAAG;YAC7B,SAAS,CAAC,MAAM,CAAC,kBAAkB;iBAChC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;iBACxB,QAAQ,CAAC,MAAA,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,UAAU,0CAAE,GAAG,0CAAE,QAAQ,EAAE,CAAC,CACvD,EACD;QACA,OAAO;YACL;gBACE,MAAM,EAAE,8BAA8B,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC;gBAChE,QAAQ,EAAE,KAAK;gBACf,UAAU,EAAE,KAAK;aAClB;SACF,CAAC;KACH;IACD,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC","sourcesContent":["import type { Metadata } from \"@metaplex-foundation/mpl-token-metadata\";\nimport type { PublicKey } from \"@solana/web3.js\";\n\nimport type { StakePool } from \"./constants\";\nimport { findStakeAuthorizationRecordId } from \"./pda\";\n\nexport const remainingAccountsForAuthorization = (\n  stakePool: Pick<StakePool, \"parsed\" | \"pubkey\">,\n  mintId: PublicKey,\n  mintMetadata: Metadata | null\n) => {\n  if (\n    stakePool.parsed.requiresAuthorization &&\n    !mintMetadata?.data.creators?.some((c) =>\n      stakePool.parsed.allowedCreators\n        .map((c) => c.toString())\n        .includes(c.address.toString())\n    ) &&\n    !(\n      mintMetadata?.collection?.key &&\n      stakePool.parsed.allowedCollections\n        .map((c) => c.toString())\n        .includes(mintMetadata?.collection?.key?.toString())\n    )\n  ) {\n    return [\n      {\n        pubkey: findStakeAuthorizationRecordId(stakePool.pubkey, mintId),\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n  }\n  return [];\n};\n"]}