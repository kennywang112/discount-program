{"version":3,"file":"constants.js","sourceRoot":"","sources":["../../sdk/constants.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,WAAW,EAAE,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAI5D,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAGrD,OAAO,EAAE,GAAG,EAAE,MAAM,+BAA+B,CAAC;AAEpD,MAAM,CAAC,MAAM,kBAAkB,GAAG,GAAG,CAAC;AAEtC,MAAM,CAAC,MAAM,sBAAsB,GAAG,IAAI,SAAS,CACjD,8CAA8C,CAC/C,CAAC;AAEF,MAAM,CAAC,MAAM,wBAAwB,GAAG,IAAI,SAAS,CACnD,8CAA8C,CAC/C,CAAC;AAEF,MAAM,CAAC,MAAM,gBAAgB,GAAG,IAAI,SAAS,CAC3C,8CAA8C,CAC/C,CAAC;AAEF,MAAM,CAAC,MAAM,oBAAoB,GAAG,IAAI,SAAS,CAC/C,6CAA6C,CAC9C,CAAC;AAqBF,MAAM,CAAC,MAAM,oBAAoB,GAAG,CAClC,UAAsB,EACtB,MAAe,EACf,IAAqB,EACrB,EAAE;IACF,OAAO,IAAI,OAAO,CAChB,kBAAkB,EAClB,sBAAsB,EACtB,IAAI,cAAc,CAChB,UAAU,EACV,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,WAAW,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,SAAS,CAAC,EACnD,IAAI,aAAJ,IAAI,cAAJ,IAAI,GAAI,EAAE,CACX,CACF,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import type { IdlAccountData as cIdlAccountData } from \"@cardinal/common\";\nimport { emptyWallet } from \"@cardinal/common\";\nimport { AnchorProvider, Program } from \"@coral-xyz/anchor\";\nimport type { AllAccountsMap } from \"@coral-xyz/anchor/dist/cjs/program/namespace/types\";\nimport type { Wallet } from \"@coral-xyz/anchor/dist/cjs/provider\";\nimport type { ConfirmOptions, Connection } from \"@solana/web3.js\";\nimport { Keypair, PublicKey } from \"@solana/web3.js\";\n\nimport type { CardinalRewardsCenter } from \"./idl/cardinal_rewards_center\";\nimport { IDL } from \"./idl/cardinal_rewards_center\";\n\nexport const REWARDS_CENTER_IDL = IDL;\n\nexport const REWARDS_CENTER_ADDRESS = new PublicKey(\n  \"42eeY5ZCBmax9UFhcRXujFwNVbSLrN6rPDQv89nkyWrj\"\n);\n\nexport const WRAPPED_SOL_PAYMENT_INFO = new PublicKey(\n  \"382KXQfzC26jbFmLZBmKoZ6eRz53iwGfxXwoGyyyH8po\"\n);\n\nexport const SOL_PAYMENT_INFO = new PublicKey(\n  \"HqiCY5NqfHfyhyjheQ4ENo5J2XSQBpeqhNoeESkDWBpU\"\n);\n\nexport const DEFAULT_PAYMENT_INFO = new PublicKey(\n  \"SdFEeJxn7XxcnYEMNpnoMMSsTfmA1bHfiRdu6qra7zL\"\n);\n\nexport type IdlAccountData<\n  T extends keyof AllAccountsMap<CardinalRewardsCenter>\n> = cIdlAccountData<T, CardinalRewardsCenter>;\nexport type RewardDistributor = IdlAccountData<\"rewardDistributor\">;\nexport type RewardEntry = IdlAccountData<\"rewardEntry\">;\nexport type StakePool = IdlAccountData<\"stakePool\">;\nexport type StakeEntry = IdlAccountData<\"stakeEntry\">;\nexport type ReceiptManager = IdlAccountData<\"receiptManager\">;\nexport type RewardReceipt = IdlAccountData<\"rewardReceipt\">;\nexport type StakeBooster = IdlAccountData<\"stakeBooster\">;\nexport type StakeAuthorizationRecord =\n  IdlAccountData<\"stakeAuthorizationRecord\">;\nexport type PaymentInfo = IdlAccountData<\"paymentInfo\">;\n\nexport type PaymentShare = {\n  address: PublicKey;\n  basisPoints: number;\n};\n\nexport const rewardsCenterProgram = (\n  connection: Connection,\n  wallet?: Wallet,\n  opts?: ConfirmOptions\n) => {\n  return new Program<CardinalRewardsCenter>(\n    REWARDS_CENTER_IDL,\n    REWARDS_CENTER_ADDRESS,\n    new AnchorProvider(\n      connection,\n      wallet ?? emptyWallet(Keypair.generate().publicKey),\n      opts ?? {}\n    )\n  );\n};\n"]}